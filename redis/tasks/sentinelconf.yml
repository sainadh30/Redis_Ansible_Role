- name: Check if sentinel.conf file exists
  ansible.builtin.stat:
    path: /etc/redis/sentinel.conf
  register: sentinel_file_stat

- name: Store current block content of /etc/redis/sentinel.conf
  ansible.builtin.shell:
    cmd: cat /etc/redis/sentinel.conf
  register: sentinel_block_content
  when: sentinel_file_stat.stat.exists

- name: Edit sentinel.conf file
  ansible.builtin.lineinfile:
    path: /etc/redis/sentinel.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - { regexp: 'sentinel monitor mymaster.*$', line: 'sentinel monitor mymaster {{ redis_master }} 6379 2' }
    - { regexp: 'sentinel auth-pass mymaster.*$', line: 'sentinel auth-pass mymaster {{ redis_master_password }}' }
    - { regexp: 'sentinel down-after-milliseconds mymaster.*$', line: 'sentinel down-after-milliseconds mymaster 5000' }
    - { regexp: 'sentinel failover-timeout mymaster.*$', line: 'sentinel failover-timeout mymaster 60000' }
    - { regexp: 'protected-mode.*$', line: 'protected-mode no' }

- name: Store the new block content of /etc/redis/sentinel.conf
  ansible.builtin.shell:
    cmd: cat /etc/redis/sentinel.conf
  register: sentinel_blockinfile_result

- name: Backup Redis configuration file
  ansible.builtin.copy:
    content: "{{ sentinel_block_content.stdout }}"
    dest: "/etc/redis/sentinel.conf_{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}_{{ ansible_date_time.minute }}.bkp"
    remote_src: yes
  when:
    - sentinel_file_stat.stat.exists
    - sentinel_block_content.stdout != sentinel_blockinfile_result.stdout

- name: Restart Redis service
  ansible.builtin.service:
    name: redis-server
    state: restarted

